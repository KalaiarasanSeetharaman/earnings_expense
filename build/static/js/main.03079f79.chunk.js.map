{"version":3,"sources":["Common/Header/Header.js","Common/Footer/Footer.js","Component/Actions/ExpenseAction.js","Component/Home/Home.js","Common/Nomatch.js","Component/Home/IncomeModal.js","Component/Home/SpendingModal.js","Layout/PublicLayout.js","Component/Reducers/ExpenseReducer.js","Component/Reducers/CommonReducer.js","Component/Reducers/Index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","balance","totalSpending","totalIncome","Container","id","fluid","Row","Col","md","className","xs","Footer","loadExpenseList","lists","toatlSpending","type","incomeModelShow","incomeModelHide","spendModelShow","spendModelHide","addIncomeSpending","data","updateSpendIncomeBalance","Home","props","this","expenselists","Card","ListGroup","variant","map","list","index","colorClass","Item","key","date","amount","desc","Button","onClick","handleIncome","handleSpend","PureComponent","connect","state","expense","expenseList","dispatch","bindActionCreators","Nomatch","IncomeModal","payload","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","target","setState","prevState","name","value","e","preventDefault","show","format","mode","inputFormat","Modal","onHide","handleIncomeClose","closeButton","Title","Body","Form","Group","controlId","Label","Control","pattern","onBlur","handleOnBlur","placeholder","required","handleIncomeSaveClick","common","incomeModal","SpendingModal","handleSpendClose","handleSpendSaveClick","spendingModal","PublicLayout","axios","then","response","datas","totalspending","filter","reduce","acc","val","totalincome","prevProps","parseInt","isloader","loaderWrapClass","loaderClass","color","height","width","timeout","visible","exact","path","component","intialState","action","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.03079f79.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport './Header.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst Header =({balance,totalSpending,totalIncome})=>{\r\n    return(\r\n        <Container id=\"headerContainer\" fluid>\r\n            <header>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h4 className=\"balanceTitle\">\r\n                        Balance \r\n                        </h4>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <span className=\"balance\">\r\n                            {balance}Kc \r\n                        </span>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} xs={6}>\r\n                        <Row>\r\n                            <Col md={4} xs={4}>\r\n                                <h6 className=\"incomeTitle\">\r\n                                Income:  \r\n                                </h6>\r\n                            </Col>\r\n                            <Col md={6} xs={6}>\r\n                                <span className=\"totalIncome\">\r\n                                    {totalIncome}Kc \r\n                                </span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={6} xs={6}>\r\n                        <Row>\r\n                            <Col md={4} xs={4}>\r\n                                <h6 className=\"spendTitle\">\r\n                                Spendings:  \r\n                                </h6>\r\n                            </Col>\r\n                            <Col md={6} xs={6}>\r\n                                <span className=\"totalSpending\">\r\n                                    {totalSpending}Kc \r\n                                </span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </header>\r\n        </Container>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Footer.css';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n \r\n  import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n \r\nconst Footer =()=>{\r\n    return(\r\n        <footer className=\"footer sec-padding\">\r\n            <Container>\r\n                <Row>\r\n                    \r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n \r\n}\r\nexport default Footer;","\r\nexport function loadExpenseList(lists,toatlSpending,totalIncome,balance){\r\n    return(\r\n        {\r\n            type:'LOAD_EXPENSE',\r\n            lists,\r\n            toatlSpending,\r\n            totalIncome,\r\n            balance\r\n          }\r\n    )\r\n}\r\nexport function incomeModelShow(){\r\n    return(\r\n        {\r\n            type:'SHOW_INCOME',\r\n          }\r\n    )\r\n}\r\nexport function incomeModelHide(){\r\n    return(\r\n        {\r\n            type:'HIDE_INCOME'\r\n          }\r\n    )\r\n}\r\n\r\nexport function spendModelShow(){\r\n    return(\r\n        {\r\n            type:'SHOW_SPENDING',\r\n          }\r\n    )\r\n}\r\nexport function spendModelHide(){\r\n    return(\r\n        {\r\n            type:'HIDE_SPENDING'\r\n          }\r\n    )\r\n}\r\n\r\nexport function addIncomeSpending(data){\r\n    return(\r\n        {\r\n            type:'ADD_INCOME_SPENDING',\r\n            data\r\n          }\r\n    )\r\n}\r\n\r\nexport function updateSpendIncomeBalance(toatlSpending,totalIncome,balance){\r\n    return(\r\n        {\r\n            type:'UPDATE_INCOME_SPENDING',\r\n            toatlSpending,\r\n            totalIncome,\r\n            balance\r\n          }\r\n    )\r\n}","import React ,{Component,PureComponent} from 'react';\r\nimport { Container, Jumbotron, Button, Image, Card, ListGroup, Row, Col } from 'react-bootstrap';\r\nimport './Home.css';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport {incomeModelShow,spendModelShow} from '../Actions/ExpenseAction';\r\n\r\nclass Home extends PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    handleIncome(){\r\n       this.props.incomeModelShow();\r\n    }\r\n    handleSpend(){\r\n        this.props.spendModelShow();\r\n     }\r\n    render(){\r\n        if(this.props.expenselists){\r\n        return(\r\n            <Container fluid className=\"homepage\">\r\n                <Card className=\"spendinglists\">\r\n                    <ListGroup variant=\"flush\">\r\n                    {\r\n                        this.props.expenselists.map((list,index)=>{\r\n                            let colorClass = 'listred';\r\n                            if(list.type=='income'){\r\n                                colorClass = 'listgreen';\r\n                            }\r\n                            return(\r\n                                <ListGroup.Item   key={index}>\r\n                                    <Row>\r\n                                        <Col md={4} xs={12}>\r\n                                        <span>{list.date}</span><br/>\r\n                                        <span className={colorClass}>{list.amount}Kc</span>\r\n                                        </Col>\r\n                                        <Col md={4} xs={12}>{list.desc}</Col>\r\n                                        <Col md={4} xs={12}>Delete</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                    </ListGroup>\r\n                </Card>\r\n                <Col md={12} xs={12}>\r\n                    <Row className=\"footerpart\">\r\n                        <Col md={12} xs={12}>\r\n                            <Button className=\"btn-income\" onClick={()=>this.handleIncome()} variant=\"success\">Add Income</Button> \r\n                            <Button onClick={()=>this.handleSpend()} variant=\"danger\">Add Spending</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Container>\r\n        )\r\n        }else{\r\n            return(\r\n            <Container fluid className=\"homepage\">\r\n            <Card className=\"spendinglists\">\r\n                <ListGroup variant=\"flush\">\r\n                    No Data Found\r\n                </ListGroup>\r\n            </Card>\r\n            <Col md={12} xs={12}>\r\n                    <Row className=\"footerpart\">\r\n                        <Col md={2} xs={12}>\r\n                            <Button onClick={()=>this.handleIncome()} variant=\"success\">Add Income</Button> \r\n                        </Col>\r\n                        <Col md={2} xs={12}>\r\n                            <Button onClick={()=>this.handleSpend()} variant=\"danger\">Add Spending</Button>\r\n                        </Col>\r\n                    </Row>\r\n            </Col>\r\n        </Container> \r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    expenselists: state.expense.expenseList\r\n})\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ incomeModelShow,spendModelShow }, dispatch)\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nconst Nomatch =()=>{\r\n    return(\r\n        <Container fluid>\r\n            \r\n        </Container>\r\n    )\r\n\r\n}\r\nexport default Nomatch;","import React,{PureComponent} from 'react';\r\nimport { Container, Row, Col, Modal, Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport {incomeModelHide,addIncomeSpending} from '../Actions/ExpenseAction';\r\n\r\nclass IncomeModal extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            payload:{\r\n                date:this.formatDate(),\r\n                type:'income',\r\n                amount:0,\r\n                desc:''\r\n            }\r\n        }\r\n    }\r\n\r\n    formatDate() {\r\n        var d = new Date(),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [day,month, year ].join('.');\r\n    }\r\n\r\n    handleIncomeClose(){\r\n        this.props.incomeModelHide();\r\n    }\r\n    \r\n    handleOnBlur({target}){\r\n        this.setState(prevState => ({\r\n            payload: {\r\n                ...prevState.payload,\r\n                [target.name]:target.value\r\n            }\r\n          }));\r\n    }\r\n\r\n    handleIncomeSaveClick(e){\r\n        if(this.state.amount>0){\r\n            e.preventDefault();\r\n            this.props.addIncomeSpending(this.state.payload);\r\n            this.setState(prevState => ({\r\n                payload: {\r\n                    ...prevState.payload,\r\n                    amount:0,\r\n                    desc:''\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {show} = this.props;\r\n        const {date, format, mode, inputFormat} = this.state;\r\n        return(\r\n            <Modal show={show} onHide={()=>this.handleIncomeClose()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Income</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formforIncome\">\r\n                        <Form.Label>Income</Form.Label>\r\n                        <Form.Control pattern=\"^-?[0-9]\\d*\\.?\\d*$\" type=\"text\" name=\"amount\" onBlur={(e)=>this.handleOnBlur(e)} placeholder=\"Enter income\" required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formDesc\">\r\n                        <Form.Label>Desctription</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"desc\" onBlur={(e)=>this.handleOnBlur(e)} placeholder=\"Desctription\"   required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\"  onClick={(e)=>this.handleIncomeSaveClick(e)}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>this.handleIncomeClose()}>\r\n                    Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    show: state.common.incomeModal\r\n})\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({incomeModelHide,addIncomeSpending }, dispatch)\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IncomeModal)\r\n","import React,{PureComponent} from 'react';\r\nimport { Container, Row, Col, Modal, Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport {spendModelHide,addIncomeSpending} from '../Actions/ExpenseAction';\r\n\r\n\r\nclass SpendingModal extends PureComponent{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            payload:{\r\n                date:this.formatDate(),\r\n                type:'spend',\r\n                amount:0,\r\n                desc:''\r\n            }\r\n        }\r\n    }\r\n\r\n    formatDate() {\r\n        var d = new Date(),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [day,month, year ].join('.');\r\n    }\r\n\r\n    handleSpendClose(){\r\n        this.props.spendModelHide();\r\n    }\r\n    \r\n    handleOnBlur({target}){\r\n        this.setState(prevState => ({\r\n            payload: {\r\n                ...prevState.payload,\r\n                [target.name]:target.value\r\n            }\r\n          }));\r\n    }\r\n\r\n    handleSpendSaveClick(e){\r\n        if(this.state.amount>0){\r\n            e.preventDefault();\r\n            this.props.addIncomeSpending(this.state.payload);\r\n            this.setState(prevState => ({\r\n                payload: {\r\n                    ...prevState.payload,\r\n                    amount:0,\r\n                    desc:''\r\n                }\r\n                }));\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {show} = this.props;\r\n        const {date, format, mode, inputFormat} = this.state;\r\n        return(\r\n            <Modal show={show} onHide={()=>this.handleSpendClose()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Spending</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formforIncome\">\r\n                        <Form.Label>Spending</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"amount\" onBlur={(e)=>this.handleOnBlur(e)} placeholder=\"Enter income\" required />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formDesc\">\r\n                        <Form.Label>Desctription</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"desc\" onBlur={(e)=>this.handleOnBlur(e)} placeholder=\"Desctription\"   required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\"  onClick={(e)=>this.handleSpendSaveClick(e)}>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>this.handleSpendClose()}>\r\n                    Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    show: state.common.spendingModal\r\n})\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({spendModelHide,addIncomeSpending }, dispatch)\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendingModal)\r\n","import React,{Fragment, Component, PureComponent} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport Header from '../Common/Header/Header';\r\nimport Footer from '../Common/Footer/Footer';\r\nimport Home from '../Component/Home/Home';\r\nimport Nomatch from '../Common/Nomatch';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\nimport {loadExpenseList,updateSpendIncomeBalance} from '../Component/Actions/ExpenseAction';\r\nimport IncomeModal from '../Component/Home/IncomeModal';\r\nimport SpendingModal from '../Component/Home/SpendingModal';\r\n\r\n\r\n  class PublicLayout extends PureComponent{\r\n   \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios(\"https://jsonblob.com/api/b12e3037-7704-11ea-9f37-1b0cacc8b512\")\r\n        .then(response=>{\r\n            let datas = response.data;\r\n            const totalspending = datas.filter(data => data.type == 'spend').reduce((acc, val) => {\r\n                return acc + val.amount;\r\n              }, 0);\r\n            const totalincome = datas.filter(data => data.type == 'income').reduce((acc, val) => {\r\n                return acc + val.amount;\r\n              }, 0);\r\n            const balance = totalincome - totalspending;\r\n            this.props.loadExpenseList(response.data,totalspending,totalincome,balance);\r\n        })\r\n      }\r\n\r\n      componentDidUpdate(prevProps) {\r\n        if (this.props.expenseList !== prevProps.expenseList) {\r\n            let datas = this.props.expenseList;\r\n            const totalspending = datas.filter(data => data.type == 'spend').reduce((acc, val) => {\r\n                return acc + parseInt(val.amount);\r\n              }, 0);\r\n            const totalincome = datas.filter(data => data.type == 'income').reduce((acc, val) => {\r\n                return acc + parseInt(val.amount);\r\n              }, 0);\r\n            const balance = totalincome - totalspending;\r\n            this.props.updateSpendIncomeBalance(totalspending,totalincome,balance);\r\n         \r\n        }\r\n      }\r\n\r\n    render(){\r\n        const {isloader,balance,totalSpending,totalIncome} = this.props;\r\n        const loaderWrapClass = isloader ? \"loadershow\" : \"hidden\";\r\n        const loaderClass = isloader ? \"\" : \"hidden\";\r\n        return(\r\n            <Fragment>\r\n                <Header\r\n                   balance ={balance}\r\n                   totalSpending={totalSpending}\r\n                   totalIncome={totalIncome}\r\n                \r\n                />\r\n                <div className={`loaderWrap private ${loaderWrapClass} `}>\r\n                    <div className={`loader ${loaderClass}`}>\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={500000000} //3 secs\r\n                            visible={isloader}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route path=\"*\">\r\n                        <Nomatch />\r\n                    </Route>\r\n                </Switch>\r\n                <IncomeModal/>\r\n                <SpendingModal/>\r\n                <Footer/>\r\n            </Fragment>\r\n        )\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  const mapStateToProps = state => ({\r\n    isloader: state.expense.isloader,\r\n    balance: state.expense.balance,\r\n    totalSpending: state.expense.totalSpending,\r\n    totalIncome: state.expense.totalIncome,\r\n    expenseList: state.expense.expenseList\r\n  })\r\n\r\n  \r\n\r\n  function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ loadExpenseList,updateSpendIncomeBalance }, dispatch)\r\n  }\r\n  \r\n  export default connect(mapStateToProps,mapDispatchToProps)(PublicLayout)","const intialState={\r\n    isloader:false,\r\n    totalIncome:0,\r\n    totalSpending:0,\r\n    balance:0,\r\n    expenseList:[]\r\n\r\n}\r\n\r\nconst expense = (state = intialState, action) => {\r\n    switch (action.type) {\r\n      case 'LOAD_EXPENSE':\r\n        return {\r\n          ...state,\r\n            totalIncome:action.totalIncome,\r\n            totalSpending:action.toatlSpending,\r\n            balance:action.balance,\r\n            expenseList: action.lists,\r\n        }\r\n        case 'ADD_INCOME_SPENDING':\r\n        return {\r\n          ...state,\r\n            expenseList:[\r\n              ...state.expenseList,\r\n              action.data\r\n            ],\r\n        }\r\n        case 'UPDATE_INCOME_SPENDING':\r\n        return {\r\n          ...state,\r\n          totalIncome:action.totalIncome,\r\n          totalSpending:action.toatlSpending,\r\n          balance:action.balance\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default expense","const intialState={\r\n    isloader:false,\r\n    spendingModal:false,\r\n    incomeModal:false\r\n\r\n}\r\n\r\nconst common = (state = intialState, action) => {\r\n    switch (action.type) {\r\n      case 'SHOW_INCOME':\r\n        return {\r\n          ...state,\r\n          incomeModal:true,\r\n          spendingModal:false,\r\n        }\r\n      case 'HIDE_INCOME':\r\n        return {\r\n          ...state,\r\n          incomeModal:false,\r\n          spendingModal:false,\r\n        }\r\n       case 'ADD_INCOME_SPENDING':\r\n        return {\r\n            ...state,\r\n            incomeModal:false,\r\n            spendingModal:false,\r\n          }\r\n        case 'SHOW_SPENDING':\r\n        return {\r\n          ...state,\r\n          spendingModal:true,\r\n          incomeModal:false,\r\n        }\r\n      case 'HIDE_SPENDING':\r\n        return {\r\n          ...state,\r\n          spendingModal:false,\r\n          incomeModal:false,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default common","import { combineReducers } from 'redux'\r\nimport expense from './ExpenseReducer'\r\nimport common from './CommonReducer'\r\nexport default combineReducers({\r\n    expense,\r\n    common\r\n})","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faMapMarker, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport PublicLayout from './Layout/PublicLayout';\nimport rootReducer from './Component/Reducers/Index';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nclass App extends Component {\n  render() {\n    return(\n      <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/\" component={PublicLayout} />\n            </Switch>\n          </Router>\n      </Provider>\n      )\n  }\n}\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}